<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Ronan Amicel]]></title><description><![CDATA[Site personnel de Ronan Amicel]]></description><link>https://ronan.amicel.net/</link><generator>RSS for Node</generator><lastBuildDate>Wed, 05 Jun 2019 19:45:35 GMT</lastBuildDate><item><title><![CDATA[Développeur :  ce qu’on ne m’a pas appris à l’école]]></title><description><![CDATA[Le 22 mai 2019, j’ai eu le plaisir de venir faire une présentation
aux étudiants du Master « Cloud Computing & Mobility »
de l’INSSET à St…]]></description><link>https://ronan.amicel.net//articles/developpeur-ce-qu-on-ne-m-a-pas-appris-a-l-ecole/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/developpeur-ce-qu-on-ne-m-a-pas-appris-a-l-ecole/</guid><pubDate>Wed, 05 Jun 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Le 22 mai 2019, j’ai eu le plaisir de venir faire une présentation
aux étudiants du &lt;a href=&quot;http://www.insset.u-picardie.fr/formations/master-informatique/master-ccm&quot;&gt;Master « Cloud Computing &amp;#x26; Mobility »&lt;/a&gt;
de l’&lt;a href=&quot;http://www.insset.u-picardie.fr&quot;&gt;INSSET&lt;/a&gt; à St Quentin,
lors de la journée « Be Zend » organisée par les étudiant·e·s.&lt;/p&gt;
&lt;p&gt;J’ai profité de cette occasion, 20 ans après la fin de mes études,
pour réfléchir à ce que je n’avais pas appris à l’école, et que j’avais
découvert « sur le tas ».&lt;/p&gt;
&lt;p&gt;Alors bien sûr, les technologies changent régulièrement, et ni React
ni Kubernetes n’étaient alors au programme. Mais, est-ce que les
nouvelles technologies sont toujours vraiment nouvelles ? En quoi
les projets sur lesquels on intervient diffèrent des exercices de l’école ?&lt;/p&gt;
&lt;p&gt;Et qu’en est-il des aspects humains de notre métier, et de nos
pratiques et méthodes de travail ? Notre profession est jeune, mais
est-ce qu’on commence à savoir un peu comment s’y prendre ?&lt;/p&gt;
&lt;p&gt;Et comment continuer à apprendre ? Vaut-il mieux se spécialiser ou au
contraire chercher à connaître des choses sur le plus de sujets possible ?&lt;/p&gt;
&lt;p&gt;Voilà quelques uns des sujets dont j’ai parlé, en m’appuyant sur le
support suivant :&lt;/p&gt;
&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;252afd0de26345df96eb517db2028c4b&quot; data-ratio=&quot;1.33333333333333&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;Merci aux participants, aux organisateurs, et en particulier à
&lt;a href=&quot;https://github.com/mbaumanndev&quot;&gt;Maxime Baumann&lt;/a&gt; pour l’invitation !&lt;/p&gt;</content:encoded></item><item><title><![CDATA[NewCrafts 2018]]></title><description><![CDATA[Jeudi 17 et vendredi 18 mai 2018 avait lieu à Paris la conférence NewCrafts, et j'y ai participé pour la 2e année consécutive.C'est une…]]></description><link>https://ronan.amicel.net//articles/newcrafts-2018/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/newcrafts-2018/</guid><pubDate>Thu, 31 May 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Jeudi 17 et vendredi 18 mai 2018 avait lieu à Paris la conférence NewCrafts, et j&apos;y ai participé pour la 2e année consécutive.&lt;/p&gt;
&lt;p&gt;C&apos;est une conférence en anglais, sur le thème du développement logiciel. L&apos;organisation est impeccable, les intervenant(e)s varié(e)s, pointu(e)s, et inspirant(e)s.&lt;/p&gt;
&lt;p&gt;Il y a plusieurs &lt;em&gt;tracks&lt;/em&gt; en parallèle, plus des ateliers, et aussi les discussions dans les couloirs, et c&apos;est donc parfois difficile de choisir vers où suivre ses pieds.&lt;/p&gt;
&lt;p&gt;La première journée, j&apos;ai assisté à pas mal de présentations, alors que la deuxième j&apos;avais plutôt envie de pratiquer avec du code, et j&apos;ai donc privilégié des ateliers. Et pendant ces deux jours, les différents moments de pause ont été l&apos;occasion de nombreuses discussions enrichissantes avec les autres participants !&lt;/p&gt;
&lt;p&gt;Voici quelques notes sur des choses qui m&apos;ont intéressé, surpris, amusé, ou encore questionné pendant ces deux jours.&lt;/p&gt;
&lt;h2&gt;Fighting the Invisible Enemy (Paul Rayner)&lt;/h2&gt;
&lt;p&gt;Ce qui va à l&apos;encontre du &lt;em&gt;flow&lt;/em&gt; dans nos processus de développement de produits, ce sont les queues invisibles qui se forment : par exemple, une fonctionnalité est développée mais en attente d&apos;être testée ou déployée.&lt;/p&gt;
&lt;p&gt;Les queues sont des indicateurs avancés (&lt;em&gt;leading indicators&lt;/em&gt;), contrairement au débit (&lt;em&gt;throughput&lt;/em&gt;) ou au temps de cycle (&lt;em&gt;cycle time&lt;/em&gt;). Il est donc important de prendre conscience de ces queues, de les rendre visibles, et surtout d&apos;agir rapidement et de manière décisive quand elles commencent à grossir, avant que les conséquences ne se manifestent de manière plus problématique au niveau de l&apos;ensemble du système.&lt;/p&gt;
&lt;p&gt;Paul Rayner a utilisé des modèles de traffic routier (&lt;a href=&quot;http://traffic-simulation.de&quot;&gt;http://traffic-simulation.de&lt;/a&gt;) pour illustrer de manière très parlante les comportements non linéaires qui apparaissent à la moindre perturbation dès lors que le système fonctionne à un niveau de capacité élevé.&lt;/p&gt;
&lt;p&gt;Il nous a aussi montré un outil sur lequel il travaille, et qui s&apos;appelle tout simplement &lt;a href=&quot;http://flow.virtualgenius.com&quot;&gt;Flow&lt;/a&gt;. Celui-ci extrait les données temporelles depuis Pivotal Tracker / Jira / etc. pour visualiser le temps passé par chaque ticket dans chaque étape, et mieux identifier les temps d&apos;attente.&lt;/p&gt;
&lt;p&gt;Cette approche visuelle m&apos;a fait penser à un autre outil du &lt;em&gt;Lean&lt;/em&gt;, le diagramme de flux cumulé (&lt;em&gt;cumulative flow diagram&lt;/em&gt;).&lt;/p&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/D3V9EXgiLiTpQD&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;p&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/virtualgenius/fighting-the-invisible-enemy-paul-rayner-newcrafts-2018&quot; title=&quot;Fighting the Invisible Enemy - Paul Rayner (NewCrafts 2018)&quot; target=&quot;_blank&quot;&gt;Fighting the Invisible Enemy - Paul Rayner (NewCrafts 2018)&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/virtualgenius&quot; target=&quot;_blank&quot;&gt;Paul Rayner&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;h2&gt;Feature Branching is Evil (Thierry de Pauw)&lt;/h2&gt;
&lt;p&gt;Thierry nous raconte son expérience en tant que consultant avec deux projets assez différents.&lt;/p&gt;
&lt;p&gt;La première équipe était peu expérimentée, et n&apos;utilisait auparavant aucun système de gestion de versions. Pour rester simple, il les a aidé à adopter Subversion : seulement deux gestes à apprendre (&lt;em&gt;checkout&lt;/em&gt;, et &lt;em&gt;commit&lt;/em&gt;), et pas de branches. Il avait pensé ça comme une première étape, mais en fait ça marchait pas mal.&lt;/p&gt;
&lt;p&gt;La deuxième équipe était constituée de développeurs expérimentés, qui avait choisi d&apos;utiliser git et le mode de fonctionnement &quot;git flow&quot;. Lorsqu&apos;il leur a suggéré d&apos;arrêter les branches à longue durée de vie, il s&apos;est heurté à une forte incompréhension :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mais les branches nous permettent de travailler chacun de notre côté sans être perturbé par les changements des autres !&lt;/li&gt;
&lt;li&gt;mais les branches nous permettent de jeter un refactoring s&apos;il ne va nulle part !&lt;/li&gt;
&lt;li&gt;mais les branches nous permettent de contrôler la qualité de ce qu&apos;on livre (via une revue de code pre-merge)&lt;/li&gt;
&lt;li&gt;mais les branches nous permettent de contrôler quelles fonctionnalités on livre (on ne merge que quand on veut livrer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans sa présentation, Thierry a abordé :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;les inconvénients des branches à longue durée de vie :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;elles retardent le feedback,&lt;/li&gt;
&lt;li&gt;elles retardent l&apos;intégration,&lt;/li&gt;
&lt;li&gt;elles cachent le travail du reste de l&apos;équipe et réduisent la communication,&lt;/li&gt;
&lt;li&gt;elles découragent le refactoring,&lt;/li&gt;
&lt;li&gt;elles créent du stock (au sens du Lean),&lt;/li&gt;
&lt;li&gt;elles augmentent le risque,&lt;/li&gt;
&lt;li&gt;elles créent du travail supplémentaire (brancher, rebaser, merger…),&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;les avantages  du &lt;em&gt;trunk-based development&lt;/em&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;commits plus fréquents sur master → builds plus fréquents → déploiements plus fréquents → time-to-market réduit → expérimentation plus facile&lt;/li&gt;
&lt;li&gt;builds plus fréquents → les problèmes sont détectés plus tôt → la qualité est améliorée&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;comment faire du &lt;em&gt;trunk-based development&lt;/em&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;l&apos;application est toujours prête à être livrée sur la branche principale,&lt;/li&gt;
&lt;li&gt;découper les gros changements en petits morceaux incrémentaux,&lt;/li&gt;
&lt;li&gt;garder cachées les nouvelles fonctionnalités non terminées,&lt;/li&gt;
&lt;li&gt;utiliser la technique &quot;&lt;em&gt;branch by abstraction&lt;/em&gt;&quot; pour les gros refactorings,&lt;/li&gt;
&lt;li&gt;utiliser les &lt;em&gt;feature toggles&lt;/em&gt; (mais en dernier recours)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;comment remplacer la revue de code  ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;le &lt;em&gt;pair programming&lt;/em&gt; est une solution possible (revue de code continue &lt;em&gt;pre-commit&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;on peut aussi faire une revue de code &lt;em&gt;post-commit&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;pre-merge&lt;/em&gt; :  &lt;em&gt;pull requests&lt;/em&gt; fréquentes sur des branches à durée de vie courte&lt;/li&gt;
&lt;li&gt;&lt;em&gt;post-merge&lt;/em&gt; : revue de code de tous les commits poussés sur &lt;em&gt;master&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;au delà des raisons invoquées explicitement, quels sont les peurs qui font qu&apos;une équipe peut résister à l&apos;adoption de ce modèle ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;les développeurs ne savent pas développer par petits incréments → c&apos;est une compétence encore trop rare, qui doit s&apos;acquérir&lt;/li&gt;
&lt;li&gt;la base de code est trop couplée, et manque de tests → c&apos;est difficile de changer quoi que ce soit sans craindre de casser quelque chose&lt;/li&gt;
&lt;li&gt;les builds sont trop lents → 🐢&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;79065390625d45f484342b18d522d54a&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;
&lt;h2&gt;The Origins of Opera and the Future of Programming (Jessica Kerr)&lt;/h2&gt;
&lt;p&gt;Je regrette de ne pas avoir pu voir cette présentation. En attendant la vidéo, un article de blog est disponible qui en reprend la trame : &lt;a href=&quot;https://the-composition.com/the-origins-of-opera-and-the-future-of-programming-bcdaf8fbe960&quot;&gt;https://the-composition.com/the-origins-of-opera-and-the-future-of-programming-bcdaf8fbe960&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Endangered Species: Senior Craftsmen (Cyrille Dupuydauby)&lt;/h2&gt;
&lt;p&gt;Le goulot d&apos;étranglement dans nos métiers, c&apos;est l&apos;apprentissage. Il n&apos;y a pas beaucoup de développeurs qui ont 10 ans d&apos;expérience, et encore moins qui en ont 20. Doit-on compter sur eux pour enseigner le métier aux nouveaux ? Seule une petite partie d&apos;entre eux a envie de devenir prof, le reste préfère sans doute programmer. C&apos;est tous ensemble, en tant que communauté, que nous devons être une organisation apprenante. Chacun, quel que soit le stade où il en est, peut aider les autres.&lt;/p&gt;
&lt;p&gt;Slides : &lt;a href=&quot;https://noti.st/dupdob/gX1kor/endangered-species-senior-crafters&quot;&gt;https://noti.st/dupdob/gX1kor/endangered-species-senior-crafters&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;How to take smart notes (Sönke Ahrens)&lt;/h2&gt;
&lt;p&gt;Les conseils pour prendre des notes sont généralement de les séparer (un cahier ou carnet par sujet / matière), de les relire dès que possible… Ce sont de mauvais conseils.&lt;/p&gt;
&lt;p&gt;Les conseils sur comment écrire un article, un rapport, un mémoire, sont très linéaires : trouvez un sujet, puis faites des recherches, puis lisez et prenez des notes, puis faites un plan, puis rédigez… L&apos;écriture y est une tâche parmi d&apos;autres, et la vision est très top-down. Une meilleure approche est possible !&lt;/p&gt;
&lt;p&gt;Pour Richard Feynman, la pensée est indissociable de l&apos;écriture. Les notes ne sont pas une forme de stockage du résultat de notre pensée, elles sont notre pensée elle-même. L&apos;esprit a besoin de cet échafaudage extérieur qu&apos;est l&apos;écriture.&lt;/p&gt;
&lt;p&gt;Pendant sa carrière académique, Niklas Luhmann a écrit environ 600 publications, dont plus de 60 livres, sur des sujets comme la sociologie, le droit, la politique, les médias, la philosophie, l&apos;art, l&apos;amour… Son secret ? Sa boîte à notes (Zettelkasten).&lt;/p&gt;
&lt;p&gt;90 000 notes accumulées. Ça semble beaucoup, mais ça fait seulement 6 par jour.&lt;/p&gt;
&lt;p&gt;Son système est simple mais terriblement efficace :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;une idée par note ; une note sert à développer une idée&lt;/li&gt;
&lt;li&gt;chaque note a un identifiant noté en haut à gauche : 1, 2, 3… ( une note peut renvoyer à une autre par son identifiant noté à l&apos;encre rouge dans le texte)&lt;/li&gt;
&lt;li&gt;il n&apos;y a pas de classement hiérarchique, l&apos;organisation est émergente : une note liée à une autre peut être insérée derrière elle dans la boîte, et recevoir un identifiant avec une branche (par exemple : 1a1) ; cela permet de retrouver des notes pertinentes à proximité, et de dérouler ainsi le fil plus tard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En insérant la rédaction de ces notes à ses activités quotidiennes de lecture, séminaires, etc. l&apos;écriture n&apos;est plus quelque chose de séparé que l&apos;on fera juste avant la deadline, mais devient un travail progressif et incrémental. Les questions à creuser et les catégories émergent. Les idées s&apos;enrichissent les unes les autres. Penser, relier et comprendre deviennent des actions concrètes.&lt;/p&gt;
&lt;p&gt;Pour en savoir plus : &lt;a href=&quot;http://takesmartnotes.com&quot;&gt;http://takesmartnotes.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Big corps as little panopticons. Agile coaches as colonial imperialists. (Romeu Moura)&lt;/h2&gt;
&lt;p&gt;Le &lt;a href=&quot;https://fr.wikipedia.org/wiki/Panoptique&quot;&gt;panoptique&lt;/a&gt; est une architecture de prison imaginée à la fin du XVIIIe siècle par &lt;a href=&quot;https://fr.wikipedia.org/wiki/Jeremy_Bentham&quot;&gt;Jeremy Bentham&lt;/a&gt;, et analysée au XXe siècle par &lt;a href=&quot;https://fr.wikipedia.org/wiki/Michel_Foucault&quot;&gt;Michel Foucault&lt;/a&gt; dans son livre « &lt;a href=&quot;https://fr.wikipedia.org/wiki/Surveiller_et_punir&quot;&gt;Surveiller et punir&lt;/a&gt; ».&lt;/p&gt;
&lt;p&gt;Ses caractéristiques clés sont que :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;les prisonniers sont toujours vus par les gardes et le savent ;&lt;/li&gt;
&lt;li&gt;les prisonniers ne voient pas les gardes ;&lt;/li&gt;
&lt;li&gt;les prisonniers ne se parlent pas entre eux.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dans un premier temps, un prisonnier se comporte bien car il est observé. Mais dans un deuxième temps, il est conditionné à devenir son propre garde.&lt;/p&gt;
&lt;p&gt;On peut comparer les entreprises à des panoptiques. Les managers veulent une complète visibilité sur ce que font leurs employés (reporting, etc), mais ne communiquent pas sur ce qu&apos;ils font, et les équipes ne se parlent pas. Les équipes finissent par devenir leurs propres gardes, et s&apos;interdisent de faire certaines choses : « ah mais non, ici on ne peut pas faire ça ».&lt;/p&gt;
&lt;p&gt;En Amérique du Sud, les colons n&apos;ont pas réussi à transformer les autochtones en esclaves. Ils avaient la mauvaise habitude de se laisser mourir. Ils devaient donc importer des esclaves venant d&apos;Afrique. Jusqu&apos;à ce que les missionnaires jésuites trouvent la combine : une fois convertis à la foi chrétienne, ils craignaient de mourir !&lt;/p&gt;
&lt;p&gt;Les grandes entreprises déploient des armées de coachs pour effectuer leur &quot;transformation agile&quot;. Il s&apos;agit moins de transformer toute la structure (et certainement pas le haut de la pyramide), que d&apos;imposer un changement à certains&lt;/p&gt;
&lt;p&gt;Pour Romeu, tous ces coaches agiles sont des jésuites. Qu&apos;ils croient ou non aux valeurs de l&apos;agilité, ils sont envoyés pour changer la culture de « ces gens là bas ». Ils sont instrumentalisés.&lt;/p&gt;
&lt;p&gt;Alors que faire ? Comprendre le système. Lire « Thinking in systems ». Lire Foucault (c&apos;est dur). Regarder la présentation de Jessica ou lire son article.&lt;/p&gt;
&lt;p&gt;Chacun d&apos;entre nous a plus de pouvoir qu&apos;il ne croit. Nous sommes conditionnés à penser le contraire. Nous vivons dans une peur artificielle d&apos;agir différemment. Nous surestimons le pouvoir de notre hiérarchie. On les croit malveillants, mais ils sont dans la même situation, à un niveau différent. Et à tous les niveaux, les gens aimeraient que les choses changent. Restez indignés !&lt;/p&gt;
&lt;h2&gt;What is programming anyway? (Felienne Hermans)&lt;/h2&gt;
&lt;p&gt;On emploie souvent des métaphores pour expliquer ce qu&apos;est la programmation. Dire que programmer c&apos;est comme les maths, ça peut avoir un effet négatif. Felienne suggère de dire plutôt que programmer c&apos;est comme écrire. Tout le monde peut écrire, et l&apos;écriture a des usages variés : fiction, poésie, calligraphie, pétition, dissertation, liste de courses…&lt;/p&gt;
&lt;p&gt;Cette présentation m&apos;a aussi fait réaliser qu&apos;Excel est un langage de programmation fonctionnelle, et que c&apos;était sans doute le meilleur langage de programmation, car des millions de gens l&apos;utilisent sans le savoir… Imaginez vous programmer en Java sans faire exprès !&lt;/p&gt;
&lt;h2&gt;Atelier: 50 shades of FizzBuzz&lt;/h2&gt;
&lt;p&gt;L&apos;atelier visait à prendre un problème simple (FizzBuzz) et à explorer différentes manières de l&apos;implémenter, en se donnant des contraintes.&lt;/p&gt;
&lt;p&gt;Par exemple, on a commencé en mode &lt;em&gt;zombie pair programming&lt;/em&gt; : le co-pilote pouvait faire des gestes mais ne pouvait pas parler, seulement grogner ou dire « brains ! ».&lt;/p&gt;
&lt;p&gt;On a ensuite enrichi les spécifications et vu comment le code évoluait.&lt;/p&gt;
&lt;p&gt;J&apos;ai profité d&apos;une partie de l&apos;atelier pour explorer comment utiliser le &lt;em&gt;property-based testing&lt;/em&gt; pour exprimer les tests.&lt;/p&gt;
&lt;p&gt;J&apos;ai mis mes différentes versions sur GitHub : &lt;a href=&quot;https://github.com/ronnix/50-shades-of-fizzbuzz&quot;&gt;https://github.com/ronnix/50-shades-of-fizzbuzz&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Atelier: Evolutionary Design&lt;/h2&gt;
&lt;p&gt;L&apos;atelier visait à expérimenter l&apos;&lt;em&gt;evolutionary design&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La première activité a consisté à implémenter, en groupes de 4-5 personnes, une nouvelle méthode sur une base de code existante (cool, c&apos;était en Python !), en mode &lt;em&gt;outside-in&lt;/em&gt; TDD. Ç&apos;a été une expérience à la fois intéressante et pénible pour moi, car je pense plutôt être de l&apos;école classique du TDD, et faire les choses en mode &lt;em&gt;London school&lt;/em&gt; allait un peu contre mon penchant naturel…&lt;/p&gt;
&lt;p&gt;La deuxième activité a consisté, toujours en groupes, à prendre une base de code développée par un autre groupe lors d&apos;un précédent atelier où ils avaient plus de temps, et à l&apos;améliorer avec des refactorings.&lt;/p&gt;
&lt;h2&gt;Dojo tournant en continu&lt;/h2&gt;
&lt;p&gt;Pendant toute la durée de la conférence, un dojo de programmation a eu lieu en continu, où chacun pouvait venir participer au développement d&apos;un jeu de la vie, en mode &lt;em&gt;mob programming&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Je n&apos;y ai participé que quelques minutes, mais c&apos;était très drôle de voir apparaître en accéléré les problèmes que l&apos;on voit en entreprise sur des projets plus longs sur lesquels il y a du &lt;em&gt;turn over&lt;/em&gt;. Le code devient très vite du code legacy, l&apos;intention initiale est vite perdue, les connaissances se transmettent mal, les nouveaux venus veulent aller dans une direction qui a déjà été essayée sans succès par les précédents, mais ils ne le savent pas…&lt;/p&gt;
&lt;h2&gt;Pauses, couloirs et soirée du jeudi&lt;/h2&gt;
&lt;p&gt;Les meilleures sessions, ce sont toujours les rencontres et les discussions avec les autres participants. J&apos;ai été heureux de recroiser des gens que je ne vois pas souvent, et d&apos;en rencontrer de nouveaux que j&apos;aurai plaisir à revoir l&apos;an prochain !&lt;/p&gt;</content:encoded></item><item><title><![CDATA[PyConFr 2017]]></title><description><![CDATA[Les 23 et 24 septembre derniers, j’étais à Toulouse pour l’édition 2017 de PyCon FR. Le programme était riche, avec trois « tracks » en…]]></description><link>https://ronan.amicel.net//articles/pyconfr-2017/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/pyconfr-2017/</guid><pubDate>Tue, 03 Oct 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Les 23 et 24 septembre derniers, j’étais à Toulouse pour l’&lt;a href=&quot;https://www.pycon.fr/2017/&quot;&gt;édition 2017 de PyCon FR&lt;/a&gt;. Le programme était riche, avec trois « &lt;em&gt;tracks&lt;/em&gt; » en parallèle, sans compter les « &lt;em&gt;sprints&lt;/em&gt; » et les ateliers. Je partage ici quelques notes sur les présentations auxquelles j’ai pu assister.&lt;/p&gt;
&lt;h2&gt;Tests&lt;/h2&gt;
&lt;p&gt;Le samedi après-midi, plusieurs présentations se sont succédées autour de la thématique des tests, dans une sorte de mini « &lt;em&gt;track&lt;/em&gt; ».&lt;/p&gt;
&lt;p&gt;Vincent Maillol nous a d’abord présenté une approche intéressante qu’ils utilisent pour les tests fonctionnels de leur API / application web. L’outil (&lt;a href=&quot;https://pypi.python.org/pypi/cricri/&quot;&gt;cricri&lt;/a&gt;) permet d’exprimer des scénarios de test en déclarant les différentes parties et les contraintes associées (la partie A est optionnelle, mais doit s’exécuter avant la partie B). Il va générer automatiquement les tests correspondant aux différentes combinaisons.&lt;/p&gt;
&lt;p&gt;L’outil s’intègre au &lt;em&gt;test runner&lt;/em&gt; standard de Python, mais malheureusement pas à Pytest.&lt;/p&gt;
&lt;p&gt;J’y ai retrouvé des analogies mais aussi des différences avec l’approche BDD (voir par exemple &lt;a href=&quot;https://fr.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;pytest-bdd&lt;/a&gt; pour une implémentation en Python) :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dans les deux cas on va pouvoir découper ses scénarios en « &lt;em&gt;steps&lt;/em&gt; » réutilisables&lt;/li&gt;
&lt;li&gt;dans l’approche BDD, on va plutôt lister explicitement tous les scénarios, ce qui a une valeur en terme de documentation et de communication avec l’équipe produit, mais qui peut introduire une certaine redondance ; l’approche générative est plus concise, mais ça peut devenir plus difficile de savoir quels scénarios sont effectivement pris en compte&lt;/li&gt;
&lt;li&gt;dans l’approche BDD, on va plutôt écrire les scénarios dans un DSL comme Gherkin, toujours dans le but d’être lisible par des non-développeurs, mais ça rajoute un niveau d’indirection et donc de lourdeur dans l’écriture des tests (personnellement je préfère écrire un test fonctionnel directement en Python qu’en Gherkin)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Une piste de réflexion : utiliser &lt;a href=&quot;http://hypothesis.readthedocs.io&quot;&gt;Hypothesis&lt;/a&gt; pour générer automatiquement des séquences d’opérations sur une application ou une API, chacune étant ensuite définie par un « step », de manière à valider des invariants (par exemple : en aucun cas deux utilisateurs ne peuvent réserver un même logement à la même date).&lt;/p&gt;
&lt;p&gt;J’ai apprécié ensuite la &lt;a href=&quot;https://octobus.net/presentations/perf_test.html&quot;&gt;présentation de Boris Feld et Pierre-Yves David&lt;/a&gt; sur les tests de performance. Ils ont bien présenté l’intérêt de considérer la performance comme une fonctionnalité du logiciel, et de suivre son évolution avec le temps via une suite de tests de performances automatisés.&lt;/p&gt;
&lt;p&gt;Ils ont exposé toute une série de facteurs à prendre en compte pour limiter la variabilité des résultats, au niveau du matériel, du noyau et des outils. Difficile d’avoir un environnement contrôlé dans le cloud, donc pour leurs besoins ils ont mis en place une machine physique dédiée.&lt;/p&gt;
&lt;p&gt;Deux outils à retenir :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://perf.readthedocs.io/&quot;&gt;perf&lt;/a&gt; : prépare le système, exécute les benchmarks, enregistre les données…&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://asv.readthedocs.io/&quot;&gt;asv&lt;/a&gt; (&lt;em&gt;Air Speed Velocity&lt;/em&gt;) : un peu le &lt;em&gt;Jenkins&lt;/em&gt; des tests de performance. Il sait lancer automatiquement la suite de tests de performance à chaque commit, stocker les résultats, les afficher sous forme de jolis graphe, et détecter les variations significatives.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enfin, j&apos;avais moi-même une présentation de quelques techniques de test avancées en Python (&lt;a href=&quot;https://speakerdeck.com/ronnix/techniques-de-test-avancees-en-python&quot;&gt;les diapos&lt;/a&gt; et &lt;a href=&quot;https://github.com/ronnix/pyconfr2017&quot;&gt;les exemples&lt;/a&gt;).  Merci à tous ceux qui m&apos;ont fait des retours, j&apos;ai apprécié vos compliments comme vos suggestions d&apos;amélioration. J&apos;ai noté notamment de regarder &lt;a href=&quot;https://pypi.python.org/pypi/libfaketime&quot;&gt;libfaketime&lt;/a&gt;, une alternative à &lt;a href=&quot;https://pypi.python.org/pypi/freezegun&quot;&gt;freezegun&lt;/a&gt; avec de meilleures performances, et d&apos;aborder les manières d&apos;intégrer &lt;a href=&quot;https://tox.readthedocs.io&quot;&gt;tox&lt;/a&gt; et &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis CI&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Devops&lt;/h2&gt;
&lt;p&gt;Côté devops, la &lt;a href=&quot;https://gawel.github.io/nuka_pycon_fr/&quot;&gt;présentation de Gaël Pasgrimaud&lt;/a&gt; montrait que malgré l’abondance d’outils d’orchestration et de gestion de configuration, certains cas d’utilisation restent mal couverts. Leur besoin : exécuter des tâches impératives sur un grand nombre de machines hébergées (plusieurs dizaines ou centaines) sur lesquelles ils ne peuvent pas forcément installer d’agent (connexion exclusivement par SSH). Ils utilisent habituellement &lt;a href=&quot;https://www.ansible.com&quot;&gt;Ansible&lt;/a&gt;, mais les administrateurs sytème n’étaient pas satisfaits de ses performances dans ce scénario.&lt;/p&gt;
&lt;p&gt;Dans un contexte où l’on peut installer un agent, je pense que &lt;a href=&quot;https://saltstack.com&quot;&gt;Salt&lt;/a&gt; serait une bonne solution (utilisé par exemple chez &lt;a href=&quot;https://www.slideshare.net/mobile/ThomasJackson4/salt-stack-at-web-scale-better-stronger-faster&quot;&gt;LinkedIn pour gérer plusieurs dizaines de milliers de serveurs&lt;/a&gt;). Et avec un plus petit nombre de machines, quelque chose de plus simple comme &lt;a href=&quot;http://www.fabfile.org&quot;&gt;Fabric&lt;/a&gt; (+ &lt;a href=&quot;https://pypi.python.org/pypi/fabtools&quot;&gt;fabtools&lt;/a&gt; !) fonctionne de manière satisfaisante. Mais pour commander efficacement 300 machines par SSH, aucune solution existante ne semblait convenir.&lt;/p&gt;
&lt;p&gt;Ils ont donc développé un outil maison (&lt;a href=&quot;https://github.com/bearstech/nuka&quot;&gt;nuka&lt;/a&gt;) basé sur Python 3, utilisant &lt;a href=&quot;https://docs.python.org/3/library/asyncio.html&quot;&gt;asyncio&lt;/a&gt; pour gérer les multiples connexions SSH concurrentes.&lt;/p&gt;
&lt;p&gt;La discussion sur les goulets d’étranglement (&lt;em&gt;bottlenecks&lt;/em&gt;) rencontrés a été intéressante : la principale limite aux performances (au delà de la qualité du réseau) était la connexion locale à l’agent SSH pour l’authentification par clé.&lt;/p&gt;
&lt;p&gt;Un peu plus tard, la &lt;a href=&quot;https://philpep.org/dl/testinfra_pyconfr_2017.pdf&quot;&gt;présentation de Philippe Pépiot&lt;/a&gt; a porté sur &lt;a href=&quot;https://pypi.python.org/pypi/testinfra&quot;&gt;testinfra&lt;/a&gt;, une bibliothèque qui permet d&apos;écrire des tests qui décrivent l&apos;état souhaité d&apos;un serveur, indépendamment de l&apos;outil de gestion de configuration utilisé (Chef, Puppet, Salt, Ansible…). Je suis fan de cette approche, et ça me semble une super alternative à &lt;a href=&quot;http://serverspec.org&quot;&gt;serverspec&lt;/a&gt; (là aussi, je préfère écrire mes tests avec Python et pytest qu&apos;avec un DSL Ruby).&lt;/p&gt;
&lt;h2&gt;Scaling et parallélisme&lt;/h2&gt;
&lt;p&gt;La &lt;a href=&quot;https://julien.danjou.info/talks/scalable-and-distributed-applications-in-python-pyconfr-2017.pdf&quot;&gt;présentation de Julien Danjou&lt;/a&gt; était un excellent état de l’art sur les approches et les outils pour le parallélisme et les systèmes distribués en Python : multi-thread, multi-process, queues…&lt;/p&gt;
&lt;p&gt;J&apos;ai noté plusieurs bibliothèques et outils intéressants à regarder :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/cachetools&quot;&gt;cachetools&lt;/a&gt; : lorsque le &lt;a href=&quot;https://docs.python.org/3/library/functools.html#functools.lru_cache&quot;&gt;functools.lru_cache&lt;/a&gt; de la bibliothèque standard ne suffit pas&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/cotyledon&quot;&gt;cotyledon&lt;/a&gt; : pour gérer des processus à longue durée de vie (services / démons)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/futurist&quot;&gt;futurist&lt;/a&gt; : extensions à l&apos;excellent module &lt;a href=&quot;https://docs.python.org/3/library/concurrent.futures.html&quot;&gt;concurrent.futures&lt;/a&gt; de la bibliothèque standard&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/tenacity&quot;&gt;tenacity&lt;/a&gt; : un décorateur &lt;code class=&quot;language-text&quot;&gt;@retry&lt;/code&gt; très paramétrable pour réessayer automatiquement les accès à des services qui peuvent être indisponibles&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/fasteners&quot;&gt;fasteners&lt;/a&gt; : une bibliothèque qui forunit plusieurs implémentations de verrous (&lt;em&gt;locks&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Unicode et alphabets&lt;/h2&gt;
&lt;p&gt;Boris Feld a refait sa &lt;a href=&quot;https://lothiraldan-pyconfr-2017-unicode.netlify.com/&quot;&gt;très bonne présentation&lt;/a&gt; qui démystifie les chaînes de caractères, les octets, l’unicode et toutes leurs feintes en Python 2 et 3.&lt;/p&gt;
&lt;p&gt;Ensuite Guillaume Ayoub à enchaîné avec une présentation riche, agréable, analogique et participative, qui nous a emmené des origines de l’écriture aux Emoji en passant par l’explication des différences entre crénage (&lt;em&gt;kerning&lt;/em&gt;), anti-crénelage (&lt;em&gt;anti-aliasing&lt;/em&gt;) et &lt;em&gt;hinting&lt;/em&gt; en typographie numérique.&lt;/p&gt;
&lt;h2&gt;Et le reste&lt;/h2&gt;
&lt;p&gt;Impossible de voir toutes les présentations intéressantes dans une telle conférence, donc j’ai notamment loupé :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;la présentation de Stéphane Angel et Joachim Jablon sur &lt;a href=&quot;https://twidi.github.io/python-packaging-talk/fr&quot;&gt;les bonnes pratiques de packaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;la présentation de Xavier Ordoquy sur &lt;a href=&quot;https://speakerdeck.com/xordoquy/mauvaises-bonnes-idees-pour-rest&quot;&gt;les fausses bonnes idées dans les API REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;la présentation de Frank Rousseau sur l’&lt;a href=&quot;https://twitter.com/gelnior/status/911940961256820736&quot;&gt;utilisation de Python par les professionnels de l’animation 3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;et plein d&apos;autres qui étaient sûrement très bien aussi…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Heureusement les conférences ont été filmées, donc une séance de rattrapage sera possible dès qu&apos;elles seront en ligne !&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: les vidéos sont en ligne sur &lt;a href=&quot;http://pyvideo.org/events/pycon-fr-2017.html&quot;&gt;http://pyvideo.org/events/pycon-fr-2017.html&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[On me demande parfois... où trouver des développeuses(eurs) Python]]></title><description><![CDATA[Dernière mise à jour : 30 octobre 2018Les événements où rencontrer des candidat(e)sles conférences annuelles PyCon FR et PyParisle meetup…]]></description><link>https://ronan.amicel.net//articles/on-me-demande-parfois-ou-trouver-des-developpeurs-python/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/on-me-demande-parfois-ou-trouver-des-developpeurs-python/</guid><pubDate>Mon, 29 Jun 2015 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;Dernière mise à jour : 30 octobre 2018&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Les événements où rencontrer des candidat(e)s&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;les conférences annuelles &lt;a href=&quot;https://www.pycon.fr/&quot;&gt;PyCon FR&lt;/a&gt; et &lt;a href=&quot;http://pyparis.org/&quot;&gt;PyParis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;le meetup &lt;a href=&quot;https://www.meetup.com/fr-FR/Paris-py-Python-Django-friends/&quot;&gt;Paris.py&lt;/a&gt; ou &lt;a href=&quot;https://www.afpy.org/communaute&quot;&gt;celui de votre ville&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;les événements dédiés au recrutement :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://remixjobs.com/remixjobsday&quot;&gt;RemixJobs Day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.techdoors.io/recruteurs/&quot;&gt;TechDoors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Les sites où diffuser une annonce&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;les job boards dédiés à &lt;strong&gt;Python&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;le &lt;a href=&quot;https://www.afpy.org/posts/emplois&quot;&gt;job board de l&apos;AFPy&lt;/a&gt; (&lt;em&gt;Association Francophone Python&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;le &lt;a href=&quot;https://www.python.org/jobs/&quot;&gt;job board de la PSF&lt;/a&gt; (&lt;em&gt;Python Software Foundation&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;le &lt;a href=&quot;http://pythonjobs.github.io/&quot;&gt;Free Python Job Board&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;les job boards français &lt;strong&gt;généralistes&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://remixjobs.com/Emploi-python&quot;&gt;RemixJobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jobs.humancoders.com/&quot;&gt;Human Coders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chooseyourboss.com&quot;&gt;Choose Your Boss&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;les sites &lt;strong&gt;internationaux&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;le thread mensuel &lt;a href=&quot;https://hn.algolia.com/?query=%22Ask%20HN:%20who%20is%20hiring%22&amp;#x26;sort=byDate&amp;#x26;prefix=false&amp;#x26;page=0&amp;#x26;dateRange=all&amp;#x26;type=story&quot;&gt;Who is Hiring?&lt;/a&gt; sur Hacker News&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&quot;http://careers.stackoverflow.com/cities/paris&quot;&gt;Stack Overflow Careers&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jobs.github.com/positions?description=Python&quot;&gt;GitHub Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jobsintech.io/jobs#q=&amp;#x26;page=0&amp;#x26;refinements=%5B%7B%22country%22%3A%22France%22%7D%5D&quot;&gt;Jobs in Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/job/home&quot;&gt;LinkedIn Jobs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;si c&apos;est pour faire du &lt;strong&gt;Django&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://djangogigs.com/&quot;&gt;Django Gigs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&quot;http://www.djangojobs.org/&quot;&gt;Django Jobs&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;si vous êtes une &lt;strong&gt;startup&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/frstartupjobs&quot;&gt;@frstartupjobs&lt;/a&gt; sur Twitter&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://angel.co/recruiting&quot;&gt;AngelList Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&quot;https://startupdeveloperjobs.com/f/python/&quot;&gt;Startup Developer Jobs&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;le &lt;a href=&quot;http://incubateurs.parisandco.com/Jobboard&quot;&gt;job board de Paris &amp;#x26; Co&lt;/a&gt; (&lt;em&gt;si vous êtes dans un de leurs incubateurs et pépinières&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;le &lt;a href=&quot;https://hub.numa.co/public/jobs&quot;&gt;job board de NUMA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;le &lt;a href=&quot;https://jobs.stationf.co/search?q=Python&quot;&gt;job board de Station F&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;si vous utilisez des &lt;strong&gt;logiciels libres&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://fr.lolix.org/search/offre/date.php&quot;&gt;Lolix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;si vous êtes ouverts au &lt;strong&gt;télétravail&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://remoteok.io/remote-python-jobs&quot;&gt;Remote OK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jobs.remotive.io/&quot;&gt;Remotive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://weworkremotely.com/&quot;&gt;We work remotely&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;enfin, si vous êtes une &lt;strong&gt;licorne&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://unicornhunt.io/&quot;&gt;UnicornHunt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;PS : la version &lt;a href=&quot;http://www.mathieurobin.com/2015/06/on-me-demande-parfois-ou-trouver-des-developpeurs-javascript/&quot;&gt;JavaScript&lt;/a&gt; par &lt;a href=&quot;https://twitter.com/mathrobin&quot;&gt;Mathieu Robin&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PS2 : la version &lt;a href=&quot;https://medium.com/@ya_f/o%C3%B9-trouver-des-d%C3%A9veloppeurs-ruby-bd45697f06b0&quot;&gt;Ruby&lt;/a&gt; par &lt;a href=&quot;https://twitter.com/ya_f&quot;&gt;Yannick François&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Installing PostgreSQL 9.2 on a Debian/Ubuntu box using fabtools]]></title><description><![CDATA[Here is a quick recipe to install the latest stable PostgreSQL version on a server using fabtools.Recipe tested on Ubuntu 12.04 (precise…]]></description><link>https://ronan.amicel.net//articles/installing-postgresql-9-2-debian-ubuntu-using-fabtools/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/installing-postgresql-9-2-debian-ubuntu-using-fabtools/</guid><pubDate>Wed, 17 Apr 2013 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Here is a quick recipe to install the latest stable PostgreSQL version on a server using &lt;a href=&quot;http://fabtools.readthedocs.org/&quot;&gt;fabtools&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; fabric&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;api &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; task

    &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; fabtools
    &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; fabtools &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; require

    @task
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;postgresql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
        Install the latest stable PostgreSQL version on Debian/Ubuntu
        from the PostgreSQL Global Development Group APT repository

        See: https://wiki.postgresql.org/wiki/Apt
        &quot;&quot;&quot;&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;# Get the distrib codename&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;#&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;# Note that with fabtools &gt;= 0.14.0 this will be:&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;#&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;#   distrib = fabtools.system.distrib_codename()&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;#&lt;/span&gt;
        distrib &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; fabtools&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;deb&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;distrib_codename&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;# Add the PGDG key&lt;/span&gt;
        require&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        fabtools&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;deb&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;add_apt_key&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;ACCC4CF8.asc&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; update&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;# Add the PGDG repository&lt;/span&gt;
        require&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;deb&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;source&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;PGDG&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;http://apt.postgresql.org/pub/repos/apt/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;%s-pgdg&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; distrib&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;main&apos;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;# Install PostgreSQL&lt;/span&gt;
        require&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;postgres&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;server&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Recipe tested on Ubuntu 12.04 (precise) and Debian 6.0 (squeeze).&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[La génération internet]]></title><description><![CDATA[(Cet article est le 5e d'une série sur l'histoire de la Silicon Valley.)]]></description><link>https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-5/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-5/</guid><pubDate>Fri, 18 Mar 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;(Cet article est le 5&lt;sup&gt;e&lt;/sup&gt; d&apos;une série sur l&apos;&lt;a href=&quot;../histoire-de-la-silicon-valley-1/&quot;&gt;histoire de la Silicon Valley&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;Yahoo!&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&quot;http://www.flickr.com/photos/phploveme/2983906948/&quot; title=&quot;Yahoo Logo (Jinho.Jung on Flickr)&quot;&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3005/2983906948_60ef69aa1c_t.jpg&quot; width=&quot;100&quot; height=&quot;61&quot; alt=&quot;Yahoo Logo&quot; style=&quot;float: right; margin: 0 0.5em 2em 1em; box-shadow: 1px 1px 2px #777&quot;&gt;&lt;/a&gt;
&lt;b&gt;David Filo&lt;/b&gt; et &lt;b&gt;Jerry Yang&lt;/b&gt;, deux doctorants de Stanford, créent début 1994 une page web pour partager leurs bookmarks (essentiellement des liens en rapport avec leur thème de recherche, au départ).&lt;/p&gt;
&lt;p&gt;Cette page devient populaire auprès de leurs collègues, qui leur envoient leurs liens préférés. Boule de neige, et ils finissent par passer plus de temps à maintenir cette liste de sites qu’à bosser sur leur recherche.&lt;/p&gt;
&lt;p&gt;La société sera introduite en bourse dès 1996, après avoir reçu des investissements de Sequoia Capital l’année précédente.&lt;/p&gt;
&lt;h3&gt;Google&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&quot;http://www.flickr.com/photos/tigerpixel/3185410319/&quot; title=&quot;Google Favicon (Tiger Pixel on Flickr)&quot;&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3504/3185410319_419a368b35_t.jpg&quot; width=&quot;100&quot; height=&quot;100&quot; alt=&quot;New Google Favicon High Resolution&quot; style=&quot;float: right; margin: 0 0.5em 2em 1em; box-shadow: 1px 1px 2px #777&quot;&gt;&lt;/a&gt;
&lt;b&gt;Larry Page&lt;/b&gt; et &lt;b&gt;Sergei Brin&lt;/b&gt;, encore deux doctorants de Stanford, travaillent sur les bibliothèques électroniques et l’indexation du web. Ils mettent au point un nouvel algorithme pour classer les résultats de recherche selon leur pertinence, évaluée en fonction des liens venant d’autres pages. Tout comme un article scientifique sera jugé important s’il est beaucoup cité, une page vers laquelle beaucoup d’autres pages établissent un lien sera jugée comme faisant référence.&lt;/p&gt;
&lt;p&gt;L’université de Stanford dépose un brevet, et essaie de céder une licence de la technologie aux principaux moteurs de recherche de l’époque, dont &lt;b&gt;Yahoo!&lt;/b&gt;. Mais ceux-ci sont occupés à transformer leurs sites en « portails », dans lesquels le moteur de recherche ne serait plus qu’un service parmi d’autres, jugé non stratégique (car au lieu de maintenir l’internaute sur le portail, il l’aide à aller voir ailleurs !).&lt;/p&gt;
&lt;p&gt;En désespoir de cause, Page et Brin, qui veulent voir leur technologie réellement exploitée, se résolvent à créer leur entreprise.&lt;/p&gt;
&lt;p&gt;Tout comme le &lt;a href=&quot;../histoire-de-la-silicon-valley-4/&quot;&gt;PARC&lt;/a&gt;, Google bénéficiera d’un contexte favorable en terme de ressources humaines. L’éclatement de la bulle en 2001 remet sur le marché un grand nombre d’ingénieurs talentueux, à des prix très raisonnables.&lt;/p&gt;
&lt;p style=&quot;clear:both; text-align: right&quot;&gt;
&lt;em&gt;Crédits images : &lt;a href=&quot;http://www.flickr.com/people/phploveme/&quot;&gt;Jinho Jung&lt;/a&gt; et &lt;a href=&quot;http://www.flickr.com/people/tigerpixel/&quot;&gt;Tiger Pixel&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Xerox et le PARC]]></title><description><![CDATA[(Cet article est le 4e d'une série sur l'histoire de la Silicon Valley.)]]></description><link>https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-4/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-4/</guid><pubDate>Thu, 17 Mar 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;(Cet article est le 4&lt;sup&gt;e&lt;/sup&gt; d&apos;une série sur l&apos;&lt;a href=&quot;../histoire-de-la-silicon-valley-1/&quot;&gt;histoire de la Silicon Valley&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;http://www.flickr.com/photos/samkinsley/2651255287/&quot; title=&quot;Palo Alto Research Center (samkinsley on Flickr)&quot;&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3072/2651255287_8395819dab_m.jpg&quot; width=&quot;240&quot; height=&quot;180&quot; alt=&quot;Palo Alto Research Center&quot; style=&quot;float: right; margin: 0 0.5em 2em 1em; box-shadow: 1px 1px 2px #777&quot;&gt;&lt;/a&gt;
En 1969, &lt;b&gt;Xerox&lt;/b&gt; est une société florissante, grâce au développement du marché des photocopieurs.&lt;/p&gt;
&lt;p&gt;Loin de se reposer sur ses lauriers, le PDG voulait anticiper les évolutions des besoins de ses clients et donc de son métier.&lt;/p&gt;
&lt;p&gt;Pour donner corps à sa vision, il demande au responsable de la R&amp;D de créer un nouveau centre de recherche, qui sera installé à &lt;b&gt;Palo Alto&lt;/b&gt;.&lt;/p&gt;
&lt;p style=&quot;clear: both&quot;&gt;En 1970, le gouvernement diminuait les crédits de recherche dirigés vers l’informatique, ce qui a permis à Xerox de recruter bon nombre des meilleurs chercheurs du domaine.&lt;/p&gt;
&lt;p&gt;Pendant trente ans, ce laboratoire de recherche privé sera à l’origine de nombreuses innovations. Certaines seront exploitées par Xerox dans ses produits (imprimantes laser, copieurs), d’autres seront adoptées ailleurs (l’interface graphique chez Apple).&lt;/p&gt;
&lt;p style=&quot;clear:both&quot;&gt;&lt;em&gt;&lt;a href=&quot;../histoire-de-la-silicon-valley-5/&quot;&gt;Lire le 5&lt;sup&gt;e&lt;/sup&gt; épisode…&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;clear:both; text-align: right&quot;&gt;
&lt;em&gt;Crédits photo : &lt;a href=&quot;http://www.flickr.com/people/samkinsley/&quot;&gt;samkinsley&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Hewlett, Packard et le mythe du garage]]></title><description><![CDATA[(Cet article est le 3e d'une série sur l'histoire de la Silicon Valley.)]]></description><link>https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-3/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-3/</guid><pubDate>Wed, 16 Mar 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;(Cet article est le 3&lt;sup&gt;e&lt;/sup&gt; d&apos;une série sur l&apos;&lt;a href=&quot;../histoire-de-la-silicon-valley-1/&quot;&gt;histoire de la Silicon Valley&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a title=&quot;Hewlett Packard garage - where Silicon Valley started (Fredrik Wass on Flickr)&quot; href=&quot;http://www.flickr.com/photos/bisonblog/3283309238/&quot;&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3467/3283309238_2807d31816_m.jpg&quot; width=&quot;240&quot; height=&quot;161&quot; alt=&quot;Hewlett Packard garage - where Silicon Valley started&quot; style=&quot;float: right; margin: 0 0.5em 2em 1em; box-shadow: 1px 1px 2px #777&quot;&gt;&lt;/a&gt;
&lt;b&gt;Bill Hewlett&lt;/b&gt; et &lt;b&gt;Dave Packard&lt;/b&gt; étaient étudiants à Stanford, et ont été diplômés en 1934. Ils ont eu l’idée d’un nouvel oscilloscope, en ont parlé à leur ancien professeur, le fameux &lt;b&gt;Frederick Terman&lt;/b&gt; (voir la &lt;a href=&quot;../histoire-de-la-silicon-valley-1/&quot;&gt;première partie&lt;/a&gt;), qui les a encouragés à créer leur société.&lt;/p&gt;
&lt;p&gt;Avec un capital de 1 000 dollars, ils ont démarré dans leur garage à Palo Alto…&lt;/p&gt;
&lt;p style=&quot;clear:both&quot;&gt;
&lt;a href=&quot;http://www.flickr.com/photos/mathoov/515334369/&quot; title=&quot;Apple Garage (Mathieu Thouvenin on Flickr)&quot;&gt;&lt;img src=&quot;http://farm1.static.flickr.com/193/515334369_e9b611014b_m.jpg&quot; width=&quot;240&quot; height=&quot;160&quot; alt=&quot;Apple Garage&quot; style=&quot;float: left; margin: 0 1em 2em 0.5em; box-shadow: 1px 1px 2px #777&quot;&gt;&lt;/a&gt;
Dans les années 1970, Hewlett-Packard est devenu une très grande société. Un de ses employés, &lt;b&gt;Steve Wozniak&lt;/b&gt;, rêve de réaliser un micro-ordinateur, mais le projet n’est pas jugé intéressant par HP, qui lui laisse les droits sur son invention.&lt;/p&gt;
&lt;p&gt;C’est avec son ami &lt;b&gt;Steve Jobs&lt;/b&gt;, dans le garage de ce dernier, qu’ils démarreront &lt;b&gt;Apple Computer&lt;/b&gt; en 1976.&lt;/p&gt;
&lt;p style=&quot;clear:both&quot;&gt;&lt;em&gt;&lt;a href=&quot;../histoire-de-la-silicon-valley-4/&quot;&gt;Lire le 4&lt;sup&gt;e&lt;/sup&gt; épisode…&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p style=&quot;clear:both; text-align: right&quot;&gt;
&lt;em&gt;Crédits photo : &lt;a href=&quot;http://www.flickr.com/people/bisonblog/&quot;&gt;Fredrik Wass&lt;/a&gt; et &lt;a href=&quot;http://www.flickr.com/photos/mathoov/&quot;&gt;Mathieu Thouvenin&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Shockley et les huit traîtres]]></title><description><![CDATA[(Cet article est le 2nd d'une série sur l'histoire de la Silicon Valley.)]]></description><link>https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-2/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-2/</guid><pubDate>Mon, 14 Mar 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;(Cet article est le 2&lt;sup&gt;nd&lt;/sup&gt; d&apos;une série sur l&apos;&lt;a href=&quot;http://ronanamicel.tumblr.com/post/3785406861/histoire-de-la-silicon-valley-1&quot;&gt;histoire de la Silicon Valley&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;William Shockley&lt;/b&gt;, bien que né à Londres, a passé son enfance à Palo Alto. Diplômé de CalTech, il part lui aussi faire son doctorat au MIT, après quoi il reste travailler sur place, aux Bell Labs, où il a co-inventé le transistor, qui lui vaudra le prix Nobel de physique en 1956.&lt;/p&gt;
&lt;p&gt;En 1953, il quitte les Bell Labs et revient sur la côte Ouest. Après un passage à CalTech, il s’installe à Moutain View où en 1955 il fonde &lt;b&gt;Shockley Electronics&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Si Shockley est un brillant scientifique, c’est un manager exécrable, réputé pour être tyrannique et paranoïaque. Lorsqu’il décide d’abandonner les recherches sur le silicium, huit de ses ingénieurs qui ne sont pas du même avis (les « huit traîtres ») quittent la société en 1957 pour fonder &lt;b&gt;Fairchild Semiconductors&lt;/b&gt;. C’est le début d’une série d’essaimages, qui donnera naissance à toute une industrie.&lt;/p&gt;
&lt;p&gt;Deux de ces huit traîtres, Gordon Moore et Robert Noyce, quitteront à leur tour Fairchild en 1968 pour fonder &lt;b&gt;Intel&lt;/b&gt;. (Andy Grove, un autre ancien de Fairchild, sera le 3&lt;sup&gt;e&lt;/sup&gt; employé d’Intel, avant d’en devenir le PDG de 1987 à 1998.)&lt;/p&gt;
&lt;p&gt;Ce seront également des anciens de Fairchild qui fonderont AMD ou encore National Semiconductors.&lt;/p&gt;
&lt;p&gt;&lt;a title=&quot;Silicon Valley Genealogy&quot; href=&quot;http://steveblank.files.wordpress.com/2010/08/fairchild-silicon-valley-genealogy.jpg&quot;&gt;&lt;img height=&quot;235&quot; width=&quot;468&quot; src=&quot;http://steveblank.files.wordpress.com/2010/08/fairchild-silicon-valley-genealogy.jpg?w=468&amp;h=235&quot; style=&quot;margin: 1em 0; box-shadow: 1px 1px 2px #777&quot; alt=&quot;image&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;L’emploi du terme de « vallée du silicium » pour désigner cette zone date du début des années 1970, époque où est sorti le premier microprocesseur, le 4004 d’Intel.&lt;/p&gt;
&lt;p&gt;Robert Kleiner, un autre des huit traîtres, fondera quant à lui l’industrie californienne du &lt;b&gt;capital risque&lt;/b&gt; en s’associant avec Tom Perkins, un ancien de chez HP.&lt;/p&gt;
&lt;p&gt;Durant les années 1980, l’industrie américaine des semiconducteurs dût faire face à une féroce concurrence des fabricants japonais. Beaucoup d’usines ont alors été délocalisées, l’ingénierie et la direction des entreprises restant cependant dans la vallée.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;../histoire-de-la-silicon-valley-3/&quot;&gt;Lire le 3&lt;sup&gt;e&lt;/sup&gt; épisode…&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Frederick Terman, Stanford, la guerre, l’espionnage et les radars]]></title><description><![CDATA[(Cet article est le 1er d'une série sur l’histoire de la Silicon Valley.)La Silicon Valley s’étend sur une zone d’environ 250 km2, entre les…]]></description><link>https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-1/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/histoire-de-la-silicon-valley-1/</guid><pubDate>Fri, 11 Mar 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;(Cet article est le 1&lt;sup&gt;er&lt;/sup&gt; d&apos;une série sur l’histoire de la Silicon Valley.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;La &lt;strong&gt;Silicon Valley&lt;/strong&gt; s’étend sur une zone d’environ 250 km&lt;sup&gt;2&lt;/sup&gt;, entre les villes de Palo Alto et San José. Jusque dans les années 1940, l’agriculture était la principale activité économique de la région, surtout connue pour ses vergers.&lt;/p&gt;
&lt;p&gt;C’est la &lt;strong&gt;seconde guerre mondiale&lt;/strong&gt; qui va changer la donne. L’effort de guerre mobilise toute la nation, y compris les universités, qui sont mises à contribution dans des projets de recherche appliquée (nucléaire, cryptographie, radars…) financés par le gouvernement fédéral.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.smecc.org/frederick_terman.htm&quot; title=&quot;Frederick Terman&quot;&gt;&lt;img src=&quot;https://78.media.tumblr.com/tumblr_lhwgpg5SmD1qc1mj0.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Frederick Terman&lt;/strong&gt;, diplômé de Stanford, était parti au MIT dans les années 1920, où son directeur était Vannevar Bush (autre personnage intéressant). Pendant la guerre, Terman a dirigé un gros labo à Harvard qui travaillait sur le brouillage des radars ennemis.&lt;/p&gt;
&lt;p&gt;Après la guerre, il retourne à Stanford comme &lt;strong&gt;doyen du département d’ingénierie&lt;/strong&gt;, et monte un labo de recherche appliquée dans le domaine des micro-ondes, de l’électronique et des radars. Si pendant la guerre, l’essentiel des fonds fédéraux sont allés à des universités de la côte Est, il est bien décidé à ce que ça change, et utilise ses relations pour attirer des financements à Stanford.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/mathoov/2415729786/&quot; title=&quot;Stanford University Campus&quot;&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3001/2415729786_55ea4bcccf_m.jpg&quot; alt=&quot;Stanford University Campus&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Les financements fédéraux (notamment militaires, la guerre froide entraînant un effort continu autour des technologies liées à l’espionnage : détection et brouillage de radars, cryptographie, etc.) permettent d’attirer des professeurs de talent, entrainant un développement important des sciences et de l’ingénierie à Stanford, amorçant un cercle vertueux, et transformant l’université en ce qu’elle est aujourd’hui.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;../histoire-de-la-silicon-valley-2/&quot;&gt;Lire le 2&lt;sup&gt;e&lt;/sup&gt; épisode…&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédits photo : &lt;a href=&quot;http://www.smecc.org/frederick_terman.htm&quot;&gt;smecc.org&lt;/a&gt; et &lt;a href=&quot;http://www.flickr.com/people/mathoov/&quot;&gt;Mathieu Thouvenin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Deleting messages from the Postfix queue]]></title><description><![CDATA[Sometimes, you have dozens of messages clogging your Postfix queue, all with the same bogus recipient.Here is how to delete them in a go…]]></description><link>https://ronan.amicel.net//articles/deleting-messages-from-the-postfix-queue/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/deleting-messages-from-the-postfix-queue/</guid><pubDate>Fri, 28 Jan 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Sometimes, you have dozens of messages clogging your Postfix queue, all with the same bogus recipient.&lt;/p&gt;
&lt;p&gt;Here is how to delete them in a go, using the &lt;strong&gt;postsuper&lt;/strong&gt; command and some scripting magic (of course, you need to replace &lt;code class=&quot;language-text&quot;&gt;address@example.com&lt;/code&gt; with the desired recipient):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;mailq &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tail&lt;/span&gt; -n +2 &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -v &lt;span class=&quot;token string&quot;&gt;&apos;^ *(&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt;  &lt;span class=&quot;token string&quot;&gt;&apos;BEGIN { RS = &quot;&quot; }
              # &lt;span class=&quot;token variable&quot;&gt;$7&lt;/span&gt;=sender, &lt;span class=&quot;token variable&quot;&gt;$8&lt;/span&gt;=recipient1, &lt;span class=&quot;token variable&quot;&gt;$9&lt;/span&gt;=recipient2
              { if (&lt;span class=&quot;token variable&quot;&gt;$8&lt;/span&gt; == &quot;address@example.com&quot; &amp;amp;&amp;amp; &lt;span class=&quot;token variable&quot;&gt;$9&lt;/span&gt; == &quot;&quot;)
                    print &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt; }
          &apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;tr&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&apos;*!&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; postsuper -d -&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Adapted from the &lt;a href=&quot;http://www.postfix.org/postsuper.1.html&quot;&gt;postsuper man page&lt;/a&gt;.)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Enabling bash completions on Mac OS X]]></title><description><![CDATA[Mac OS X comes with bash as the default shell, but it does not include the very convenient completion functionality commonly available in…]]></description><link>https://ronan.amicel.net//articles/enabling-bash-completions-on-mac-os-x/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/enabling-bash-completions-on-mac-os-x/</guid><pubDate>Sun, 23 Jan 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Mac OS X comes with bash as the default shell, but it does not include the very convenient completion functionality commonly available in Linux distributions. So here are the steps to enable it.&lt;/p&gt;
&lt;p&gt;First, you need to install the &lt;strong&gt;bash-completion&lt;/strong&gt; package using the great &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; package manager:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;brew &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; bash-completion&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, enable the completions for the &lt;strong&gt;brew&lt;/strong&gt; command itself:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;ln&lt;/span&gt; -s &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;brew --prefix&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;/Library/Contributions/brew_bash_completion.sh &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;brew --prefix&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;/etc/bash_completion.d/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, edit your &lt;strong&gt;~/.bash_profile&lt;/strong&gt; to add the following lines:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;export&lt;/span&gt; USER_BASH_COMPLETION_DIR&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;~/.bash_completion.d
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;brew --prefix&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;/etc/bash_completion &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;brew --prefix&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;/etc/bash_completion
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, create a file named &lt;strong&gt;~/.bash_completion&lt;/strong&gt; with the following lines (this will allow you to add your own completion scripts in the &lt;strong&gt;~/.bash_completion.d/&lt;/strong&gt; directory):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; -d &lt;span class=&quot;token variable&quot;&gt;$USER_BASH_COMPLETION_DIR&lt;/span&gt; -a -r &lt;span class=&quot;token variable&quot;&gt;$USER_BASH_COMPLETION_DIR&lt;/span&gt; -a \
     -x &lt;span class=&quot;token variable&quot;&gt;$USER_BASH_COMPLETION_DIR&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$USER_BASH_COMPLETION_DIR&lt;/span&gt;/*&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;i&lt;span class=&quot;token comment&quot;&gt;##*/} != @(*~|*.bak|*.swp|\#*\#|*.dpkg*|.rpm*) ]] &amp;amp;&amp;amp;&lt;/span&gt;
                        &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; \&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; -f &lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt; -o -h &lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt; \&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; -a -r &lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$i&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;
unset i&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s it! All new shells will now be completion enabled.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Lean Startups and Business Models Meetup in Paris]]></title><description><![CDATA[Presentation by Christian Baudry at the first meeting of our "Lean Startups and Business Models" group in Paris on November 3rd, 2010.Note…]]></description><link>https://ronan.amicel.net//articles/lean-startups-and-business-models-meetup-paris/</link><guid isPermaLink="false">https://ronan.amicel.net//articles/lean-startups-and-business-models-meetup-paris/</guid><pubDate>Sun, 07 Nov 2010 00:00:00 GMT</pubDate><content:encoded>&lt;iframe src=&quot;https://player.vimeo.com/video/16584055&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Presentation by Christian Baudry at the first meeting of our &quot;Lean Startups and Business Models&quot; group in Paris on November 3rd, 2010.&lt;/p&gt;
&lt;p&gt;Note : the first ~2 minutes are missing, and I had to stop recording after ~25 minutes (no space left on my iPhone). Hope this is useful nevertheless!&lt;/p&gt;</content:encoded></item></channel></rss>